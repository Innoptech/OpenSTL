name: Release

on:
  push:
    tags:
      - 'v*'

# Default no permissions; grant per job
permissions: {}

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build_sdist:
    name: Build sdist (source distribution)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build
        run: python -m pip install --upgrade pip build
      - name: Build sdist
        run: python -m build --sdist --outdir dist
      - name: Verify sdist exists
        run: |
          test -n "$(ls dist/*.tar.gz 2>/dev/null)" || { echo "No sdist found"; exit 1; }
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: build_sdist
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0          # helpful for some projects/cibuildwheel
          fetch-tags: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Print the arch and system
        run: |
          python -c "import platform; print('System:', platform.system()); print('Machine:', platform.machine())"
      - name: Install cibuildwheel
        run: python -m pip install --upgrade pip cibuildwheel==2.20.0
      - name: Build wheels
        env:
          # Skip very old CPythons / PyPy if not supported by your project
          CIBW_SKIP: "cp36-* cp37-* pp*"
          # Example: if you need build isolation flags or test commands, set CIBW_* here
          # CIBW_TEST_COMMAND: "pytest -q"
        run: python -m cibuildwheel --output-dir wheelhouse
      - name: Verify wheels exist
        run: |
          test -n "$(ls wheelhouse/*.whl 2>/dev/null)" || { echo "No wheels found"; exit 1; }
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/openstl
    permissions:
      id-token: write     # OIDC for Trusted Publishing
      contents: read
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - name: List artifacts
        run: ls -l dist
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          # skip-existing: true   # optional: uncomment if you allow re-runs without failing

  publish-to-pypi:
    name: Publish to PyPI
    needs: publish-to-testpypi
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/openstl
    permissions:
      id-token: write     # OIDC for Trusted Publishing
      contents: read
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - name: List artifacts
        run: ls -l dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign & Upload to GitHub Release
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: ./dist/*.whl ./dist/*.tar.gz
      - name: Create GitHub Release (idempotent)
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          # Create the release if not existing; ignore error if it already exists
          gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes "" || true
      - name: Upload artifacts
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}' --clobber
